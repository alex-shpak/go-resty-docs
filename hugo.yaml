baseURL: https://resty.dev/
title: Resty

languageCode: en-us
cleanDestinationDir: true

# uglyURLs: true
# permalinks:
#   posts: ":filename"

module:
  imports:
    - path: github.com/alex-shpak/hugo-book/v12

# Needed for mermaid/katex shortcodes
markup:
  goldmark:
    renderer:
      unsafe: true
  tableOfContents:
    startLevel: 1
    endLevel: 4
    # ordered: false
  highlight:
    style: base16-snazzy

menu:
  before:
    - name: "Upgrading to v3"
      url: "/docs/upgrading-to-v3/"
      weight: 10
    - name: "New Features and Enhancements"
      parent: "Upgrading to v3"
      url: "/docs/new-features-and-enhancements/"
      weight: 20

params:
  # Resty site variables
  Resty:
    GoDoc: https://pkg.go.dev
    GitHubRepo: https://github.com/go-resty/resty
    GitHubSlug: go-resty/resty
    V3:
      Version: v3.0.0-beta.1
      GoMinVersion: go1.21
      Vanity: resty.dev/v3
      GoDocLinkPrefix: https://pkg.go.dev/resty.dev/v3#

  # (Optional, default light) Sets color theme: light, dark or auto.
  # Theme 'auto' switches between dark and light modes based on browser/os preferences
  BookTheme: "auto"

  # (Optional, default none) Controls table of contents visibility on right side of pages.
  # Start and end levels can be controlled with markup.tableOfContents setting.
  # You can also specify this parameter per page in front matter.
  BookToC: true

  # (Optional, default favicon.png) Set the path to a favicon file.
  # If the favicon is /static/favicon.png then the path would be favicon.png
  # BookFavicon: "favicon.png"

  # (Optional, default none) Set the path to a logo for the book.
  # If the logo is /static/logo.png then the path would be logo.png
  # BookLogo: /logo.png

  # (Optional, default docs) Specify root page to render child pages as menu.
  # Page is resoled by .GetPage function: https://gohugo.io/functions/getpage/
  # For backward compatibility you can set '*' to render all sections to menu. Acts same as '/'
  BookSection: docs

  # (Optional, default none) Set template for commit link for the page. Requires enableGitInfo.
  # When set enabled 'Last Modified' and a link to the commit in the footer of the page.
  # Param is executed as template using .Site, .Page and .GitInfo as context.
  BookLastChangeLink: 'https://github.com/go-resty/docs/commit/{{ .GitInfo.Hash }}'

  # (Optional, default none) Set template for edit page link.
  # When set enabled 'Edit this page' link in the footer of the page.
  # Param is executed as template using .Site, .Page and .Path as context.
  BookEditLink: 'https://github.com/go-resty/docs/edit/main/exampleSite/{{ .Path }}'

  # (Optional, default 'January 2, 2006') Configure the date format used on the pages
  # - In git information
  # - In blog posts
  # https://gohugo.io/functions/time/format/
  # BookDateFormat: "January 2, 2006"

  # (Optional, default true) Enables search function with flexsearch,
  # Index is built on fly, therefore it might slowdown your website.
  # Configuration for indexing can be adjusted in i18n folder per language.
  # BookSearch: true

  # (Optional, default true) Enables comments template on pages
  # By default partals/docs/comments.html includes Disqus template
  # See https://gohugo.io/content-management/comments/#configure-disqus
  # Can be overwritten by same param in page frontmatter
  BookComments: false

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables portable links and link checks in markdown pages.
  # Portable links meant to work with text editors and let you write markdown without {{< relref >}} shortcode
  # Theme will print warning or error if page referenced in markdown does not exists.
  # Possible values are false | 'warning' | 'error'
  # BookPortableLinks: 'warning'

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables service worker that caches visited pages and resources for offline use.
  # can be false, true or 'precache', precache will try to download all content pages on install.
  # BookServiceWorker: "precache"

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables a drop-down menu for translations only if a translation is present.
  # BookTranslatedOnly: false
